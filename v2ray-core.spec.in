# Generated by go2rpm 1.3

# @SOURCE_URL@
%global goipath         v2ray.com/core
%global forgeurl        @SOURCE_URL@
Version:                @VERSION@

%gometa

%global common_description %{expand:
Project V is a set of network tools that help you to build your own computer
network. It secures your network connections and thus protects your privacy.
More detail Please check https://www.v2fly.org/}

%global shortname       v2ray
%global goname          %{shortname}-core
%global golicenses      LICENSE
%global godocs          README.md SECURITY.md
%global v2ray_config    %{gosourcedir}/release/config
%global v2ray_units     %{v2ray_config}/systemd/system

Name:           %{goname}
Release:        @RELEASE@%{?dist}
Summary:        A platform for building proxies to bypass network restrictions
License:        MIT
URL:            %{gourl}

# Source is created by:
# curl -L @SOURCE_URL@/archive/@TAG@/@NAME@-@VERSION@.tar.gz -o @NAME@-@VERSION@.tar.gz
# tar -xzf @NAME@-@VERSION@.tar.gz
# cd @NAME@-@VERSION@
# go mod vendor
# tar -czf ../vendor.tar.gz vendor
# cd ..
# rm -rf @NAME@-@VERSION@
Source0:        %{gosource}
Source1:        vendor.tar.gz
# sed script files
Source10:       systemd-rename-user.sed
Source11:       systemd-multi-configs.sed
# v2ray config file templates
Source20:       empty.json
Source21:       00_log.json
Source22:       03_routing.json
Source23:       06_outbounds.json

BuildRequires:  systemd-rpm-macros

%{?systemd_requires}
Requires(pre):  shadow-utils
Requires:       glibc
Recommends:     v2ray-geoip
Recommends:     v2ray-domain-list-community

Provides:       %{shortname} = %{version}-%{release}
Obsoletes:      %{shortname} < 4.32.1-2


%description
%{common_description}


%prep
# prep: sources
%if 0%{?rhel}
%forgeautosetup
%global gobuilddir %{_builddir}/%{archivename}/_build
if [[ ! -e "%{gobuilddir}/bin" ]] ; then
    install -m 0755 -vd %{gobuilddir}/bin
    export GOPATH="%{gobuilddir}"
fi
%global gosourcedir %{gobuilddir}/src/%{goipath}
if [[ ! -e "%{gosourcedir}" ]] ; then
    install -m 0755 -vd $(dirname %{gosourcedir})
    ln -fs %{_builddir}/%{archivename} %{gosourcedir}
fi
cd %{gosourcedir}
%else
%goprep
%endif

%setup -qTD -a 1


%build
# build: binaries
export LDFLAGS="-linkmode=external "
%gobuild -o %{gobuilddir}/bin/v2ray %{goipath}/main
unset LDFLAGS

%if 0%{?rhel}
go build \
    -buildmode pie \
    -compiler gc \
    -tags="rpm_crashtraceback confonly" \
    -ldflags="-linkmode=external -X %{goipath}/version=@VERSION@ -B 0x$(head -c20 /dev/urandom|od -An -tx1|tr -d ' \n')" \
    -trimpath \
    -a -v \
    -o %{gobuilddir}/bin/v2ctl \
    %{goipath}/infra/control/main

%else
export LDFLAGS="-linkmode=external " BUILDTAGS="confonly"
%gobuild -o %{gobuilddir}/bin/v2ctl %{goipath}/infra/control/main
unset LDFLAGS BUILDTAGS
%endif

# build: systemd unit files
sed -e 's|/usr/local/bin|%{_bindir}|g' \
    -e 's|/usr/local/etc|%{_sysconfdir}|g' \
    -f %{S:10} \
%if 0%{?rhel}
    -f %{S:11} \
%endif
    %{v2ray_units}/v2ray.service > %{gobuilddir}/v2ray.service

sed -e 's|/usr/local/bin|%{_bindir}|g' \
    -e 's|/usr/local/etc|%{_sysconfdir}|g' \
    -f %{S:10} \
    %{v2ray_units}/v2ray@.service > %{gobuilddir}/v2ray@.service


%install
# install: binaries
install -m 0755 -vd                               %{buildroot}%{_bindir}
install -m 0755 -vp %{gobuilddir}/bin/v2ray       %{buildroot}%{_bindir}/v2ray
install -m 0755 -vp %{gobuilddir}/bin/v2ctl       %{buildroot}%{_bindir}/v2ctl
# install: config file
install -m 0755 -vd                               %{buildroot}%{_sysconfdir}/v2ray
%if 0%{?rhel}
install -m 0644 -vp %{S:20}                       %{buildroot}%{_sysconfdir}/v2ray/01_api.json
install -m 0644 -vp %{S:20}                       %{buildroot}%{_sysconfdir}/v2ray/02_dns.json
install -m 0644 -vp %{S:20}                       %{buildroot}%{_sysconfdir}/v2ray/04_policy.json
install -m 0644 -vp %{S:20}                       %{buildroot}%{_sysconfdir}/v2ray/05_inbounds.json
install -m 0644 -vp %{S:20}                       %{buildroot}%{_sysconfdir}/v2ray/07_transport.json
install -m 0644 -vp %{S:20}                       %{buildroot}%{_sysconfdir}/v2ray/08_stats.json
install -m 0644 -vp %{S:20}                       %{buildroot}%{_sysconfdir}/v2ray/09_reverse.json
install -m 0644 -vp %{S:21}                       %{buildroot}%{_sysconfdir}/v2ray/00_log.json
install -m 0644 -vp %{S:22}                       %{buildroot}%{_sysconfdir}/v2ray/03_routing.json
install -m 0644 -vp %{S:23}                       %{buildroot}%{_sysconfdir}/v2ray/06_outbounds.json
%else
install -m 0644 -vp %{v2ray_config}/config.json   %{buildroot}%{_sysconfdir}/v2ray/config.json
%endif
# install: systemd unit files
install -m 0755 -vd                               %{buildroot}%{_unitdir}
install -m 0644 -vp %{gobuilddir}/v2ray.service   %{buildroot}%{_unitdir}/v2ray.service
install -m 0644 -vp %{gobuilddir}/v2ray@.service  %{buildroot}%{_unitdir}/v2ray@.service
# install: v2ray assets directory
install -m 0755 -vd                               %{buildroot}%{_datadir}/v2ray


%files
%license %{golicenses}
%doc %{godocs}
# binaries
%{_bindir}/v2ray
%{_bindir}/v2ctl
# config file
%dir %{_sysconfdir}/v2ray
%if 0%{?rhel}
%config(noreplace) %{_sysconfdir}/v2ray/00_log.json
%config(noreplace) %{_sysconfdir}/v2ray/01_api.json
%config(noreplace) %{_sysconfdir}/v2ray/02_dns.json
%config(noreplace) %{_sysconfdir}/v2ray/03_routing.json
%config(noreplace) %{_sysconfdir}/v2ray/04_policy.json
%config(noreplace) %{_sysconfdir}/v2ray/05_inbounds.json
%config(noreplace) %{_sysconfdir}/v2ray/06_outbounds.json
%config(noreplace) %{_sysconfdir}/v2ray/07_transport.json
%config(noreplace) %{_sysconfdir}/v2ray/08_stats.json
%config(noreplace) %{_sysconfdir}/v2ray/09_reverse.json
%else
%config(noreplace) %{_sysconfdir}/v2ray/config.json
%endif
# systemd unit files
%{_unitdir}/v2ray.service
%{_unitdir}/v2ray@.service
# v2ray assets directory
%dir %{_datadir}/v2ray


# Scriptlets >>
%pre
getent group %{shortname} >/dev/null || groupadd -r %{shortname}
getent passwd %{shortname} >/dev/null || \
    (useradd -r \
    -g %{shortname} \
    -d %{_localstatedir}/%{shortname} \
    -s /sbin/nologin \
    -c "User for running %{shortname}" %{shortname} && \
    echo "  User %{shortname} created.")
exit 0

%post
%systemd_post v2ray.service
%systemd_post v2ray@.service

%preun
%systemd_preun v2ray.service

if [ $1 -eq 0 ]; then
    # Package removal, not upgrade
    if [ -x /usr/bin/systemctl ]; then
        # systemd_preun uses systemctl disable --now which doesn't work well with template services.
        # See https://github.com/systemd/systemd/issues/15620
        # The following lines mimicks its behaviour by running two commands:
        # disable and stop all the v2ray services
        systemctl --no-reload disable v2ray@.service || :
        systemctl stop "v2ray@*.service" || :
    fi
    if (getent passwd %{shortname} >/dev/null); then
        echo "  You may should remove user v2ray mannually."
    fi
fi

%postun
%systemd_postun_with_restart v2ray.service
%systemd_postun_with_restart "v2ray@*.service"
# << Scriptlets

%changelog
* @DATE@ sixg0000d <sixg0000d@gmail.com> - @VERSION@-@RELEASE@
- Update package
- For more changelogs, please see: @SOURCE_URL@/releases/tag/@TAG@
