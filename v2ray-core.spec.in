# Generated by go2rpm 1.3

# @SOURCE_URL@
%global goipath         github.com/v2fly/v2ray-core/v4
Version:                @VERSION@

%gometa

%global shortname       v2ray
%global goname          %{shortname}-core
%global golicenses      LICENSE
%global godocs          README.md SECURITY.md

Name:                   %{goname}
Release:                @RELEASE@%{?dist}
Summary:                A platform for building proxies to bypass network restrictions
License:                MIT
URL:                    https://www.v2fly.org/

%global common_description %{expand:
Project V is a set of network tools that help you to build your own computer
network. It secures your network connections and thus protects your privacy.
For more details please see %{url}}

# Sources is created by:
# cd outdir
# curl -L @SOURCE_URL@/archive/@TAG@/@NAME@-@VERSION@.tar.gz -o @NAME@-@VERSION@.tar.gz
# tar -xzf @NAME@-@VERSION@.tar.gz
# cd @NAME@-@VERSION@
# go mod vendor
# tar -czf outdir/vendor.tar.gz vendor
Source0:        %{gosource}
Source1:        vendor.tar.gz
# Sources is created by:
# cp outdir/@NAME@-@VERSION@/release/config/config.json outdir/config.json
# sed -e "s|User=.*|DynamicUser=true|" outdir/$(NAME)-$(VERSION)/release/debian/v2ray.service >outdir/v2ray.service
# sed -e "s|User=.*|DynamicUser=true|" outdir/$(NAME)-$(VERSION)/release/debian/v2ray@.service >outdir/v2ray@.service
# sed \
# -e "/\[Service\]/a User=v2ray" \
# -e "s|-config|-confdir|g" \
# -e "s|/etc/v2ray/config.json|/etc/v2ray.confdir|g" \
# outdir/v2ray.service >outdir/v2ray-confdir.service
Source10:       config.json
Source20:       v2ray.service
Source21:       v2ray@.service
Source22:       v2ray-confdir.service

BuildRequires:  systemd-rpm-macros

%{?systemd_requires}
Requires:       systemd >= 232
Recommends:     %{_datadir}/v2ray/geoip.dat
Recommends:     %{_datadir}/v2ray/geosite.dat

Provides:       %{shortname} = %{version}-%{release}
Obsoletes:      %{shortname} < 4.32.1-2

%package -n %{shortname}-confdir
Summary:        Enable multiple config for v2ray
%{?systemd_requires}
Requires:       systemd >= 232
Requires:       %{name}%{?_isa} = %{version}-%{release}

%description
%{common_description}


%description -n %{shortname}-confdir
Enable multiple config for v2ray.


%prep
# prep: sources
%if 0%{?fedora}
%goprep
# EPEL
%else
%forgeautosetup
%global gobuilddir %{_builddir}/%{archivename}/_build
if [[ ! -e "%{gobuilddir}/bin" ]] ; then
    install -m 0755 -vd %{gobuilddir}/bin
    export GOPATH="%{gobuilddir}"
fi
%global gosourcedir %{gobuilddir}/src/%{goipath}
if [[ ! -e "%{gosourcedir}" ]] ; then
    install -m 0755 -vd $(dirname %{gosourcedir})
    ln -fs %{_builddir}/%{archivename} %{gosourcedir}
fi
cd %{gosourcedir}
%endif
# prep: go vendor
%setup -qTD -a 1


%build
# build: binaries
export LDFLAGS="-linkmode=external "
%gobuild -o %{gobuilddir}/bin/v2ray %{goipath}/main
unset LDFLAGS

%if 0%{?fedora}
export LDFLAGS="-linkmode=external " BUILDTAGS="confonly"
%gobuild -o %{gobuilddir}/bin/v2ctl %{goipath}/infra/control/main
unset LDFLAGS BUILDTAGS
# EPEL
%else
go build \
    -buildmode pie \
    -compiler gc \
    -tags="rpm_crashtraceback confonly" \
    -ldflags="-linkmode=external -X %{goipath}/version=%{version} -B 0x$(head -c20 /dev/urandom|od -An -tx1|tr -d ' \n')" \
    -trimpath \
    -a -v \
    -o %{gobuilddir}/bin/v2ctl \
    %{goipath}/infra/control/main
%endif


%install
# install: binaries
install -m 0755 -vd                          %{buildroot}%{_bindir}
install -m 0755 -vp %{gobuilddir}/bin/v2ray  %{buildroot}%{_bindir}/v2ray
install -m 0755 -vp %{gobuilddir}/bin/v2ctl  %{buildroot}%{_bindir}/v2ctl
# install: config
install -m 0755 -vd                          %{buildroot}%{_sysconfdir}/v2ray
install -m 0755 -vd                          %{buildroot}%{_sysconfdir}/v2ray.confdir
install -m 0644 -vp %{S:10}                  %{buildroot}%{_sysconfdir}/v2ray/config.json
# install: systemd
install -m 0755 -vd                          %{buildroot}%{_unitdir}
install -m 0644 -vp %{S:20}                  %{buildroot}%{_unitdir}/v2ray.service
install -m 0644 -vp %{S:21}                  %{buildroot}%{_unitdir}/v2ray@.service
install -m 0644 -vp %{S:22}                  %{buildroot}%{_unitdir}/v2ray-confdir.service
# install: v2ray assets directory
install -m 0755 -vd                          %{buildroot}%{_datadir}/v2ray


%files
%license %{golicenses}
%doc %{godocs}
# binaries
%{_bindir}/v2ray
%{_bindir}/v2ctl
# config
%dir %{_sysconfdir}/v2ray
%config(noreplace) %{_sysconfdir}/v2ray/config.json
# systemd
%{_unitdir}/v2ray.service
%{_unitdir}/v2ray@.service
# v2ray assets directory
%dir %{_datadir}/v2ray


%files -n %{shortname}-confdir
# config
%dir %{_sysconfdir}/v2ray.confdir
# systemd
%{_unitdir}/v2ray-confdir.service


# Scriptlets >>
%post
%systemd_post v2ray.service
%systemd_post v2ray@.service

%preun
%systemd_preun v2ray.service

if [ $1 -eq 0 ]; then
    # Package removal, not upgrade
    if [ -x /usr/bin/systemctl ]; then
        # systemd_preun uses systemctl disable --now which doesn't work well with template services.
        # See https://github.com/systemd/systemd/issues/15620
        # The following lines mimicks its behaviour by running two commands:
        # disable and stop all the v2ray services
        systemctl --no-reload disable v2ray@.service || :
        systemctl stop "v2ray@*.service" || :
    fi
fi

%postun
%systemd_postun_with_restart "v2ray.service"
%systemd_postun_with_restart "v2ray@*.service"
# --------------------------- v2ray-confdir ---------------------------
%post -n %{shortname}-confdir
%systemd_post v2ray-confdir.service
# Initial multiple config files when initial installation
if [ $1 -eq 1 ]; then
    for BASE in 01_api 02_dns 04_policy 05_inbounds 07_transport 08_stats 09_reverse 10_fakedns 11_browserForwarder; do
        echo "{}" > "%{_sysconfdir}/v2ray.confdir/${BASE}.json" || :
    done
# 00_log.json
    cat > "%{_sysconfdir}/v2ray.confdir/00_log.json" <<EOF || :
{
    "log": {
        "loglevel": "warning"
    }
}
EOF
# 03_routing.json
    cat > "%{_sysconfdir}/v2ray.confdir/03_routing.json" <<EOF || :
{
    "routing": {
        "domainStrategy": "AsIs",
        "rules": [
            {
                "type": "field",
                "ip": [
                    "geoip:private"
                ],
                "outboundTag": "block"
            }
        ]
    }
}
EOF
# 06_outbounds.json
    cat > "%{_sysconfdir}/v2ray.confdir/06_outbounds.json" <<EOF || :
{
    "outbounds": [
        {
            "protocol": "freedom",
            "tag": "direct"
        },
        {
            "protocol": "blackhole",
            "tag": "block"
        }
    ]
}
EOF
fi

%preun -n %{shortname}-confdir
%systemd_preun v2ray-confdir.service
# remove multiple config files when package removal, not upgrade
if [ $1 -eq 0 ] && [ -x /usr/bin/rm ]; then
    /usr/bin/rm -rf %{_sysconfdir}/v2ray.confdir/* || :
fi

%postun -n %{shortname}-confdir
%systemd_postun_with_restart v2ray-confdir.service
# << Scriptlets

%changelog
* @DATE@ sixg0000d <sixg0000d@gmail.com> - @VERSION@-@RELEASE@
- Update package
- For more details, please see: @SOURCE_URL@/releases/tag/@TAG@
